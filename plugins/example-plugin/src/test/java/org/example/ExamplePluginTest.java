/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.io.File;

import org.gradle.api.Project;
import org.gradle.testfixtures.ProjectBuilder;
import org.gradle.testkit.runner.BuildResult;
import org.gradle.testkit.runner.GradleRunner;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.CleanupMode;
import org.junit.jupiter.api.io.TempDir;

class ExamplePluginTest {
	private static final String BUILD_SUCCESSFUL = "BUILD SUCCESSFUL";
	private static final String EXAMPLE_PLUGIN_ID = "org.example.examplePlugin";
	private static final String EXAMPLE_TASK = "exampleTask";
	private static final String BUILD_GRADLE = "build.gradle";

	@TempDir(cleanup = CleanupMode.NEVER)
	File projectDir;

	@Test
	void pluginRegistersATask() {

		Project project = ProjectBuilder.builder().build();
		project.getPlugins().apply(EXAMPLE_PLUGIN_ID);

		assertNotNull(project.getTasks().findByName(EXAMPLE_TASK));
	}

	@Test
	void canRunTask() {
		Project project = ProjectBuilder.builder().build();
		project.copy(s -> {
			s.from(new File(getClass().getClassLoader().getResource(BUILD_GRADLE).getFile()).getParent());
			s.into(projectDir);
		});

		GradleRunner runner = GradleRunner.create();
		runner.forwardOutput();
		runner.withPluginClasspath();
		runner.withArguments(EXAMPLE_TASK);
		runner.withProjectDir(projectDir);
		BuildResult result = runner.build();

		assertTrue(result.getOutput().contains(BUILD_SUCCESSFUL));
	}
}
